<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="keywords" content="">
    <meta name="author" content="">
    <meta name="Copyright" content="">
    <link rel="icon" href="images/favicon.ico">
    <title>LOLUWIN Giveaway for {{ description }}</title>
    <link href="/components/bootstrap/dist/css/bootstrap.css" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="/components/loluwin/css/jquery.countdown.css">
    <link href="/components/loluwin/css/custom.css" rel="stylesheet">
    <link rel="stylesheet" href="/components/backgrid/lib/backgrid.css" type="text/css">
</head>
<body>
    <header>
        <div class="container header">
            <a href="/"><img src="/components/loluwin/img/logo.png" alt="Logo"></a>
        </div>
    </header>
    <div class="container content-area">
        <div class="col-sm-12">
          
            {# page title #}
            <h1>{{ title }}</h1>
            <h4>TIME FOR A DRAWING OF {{ description }}!!</h4>
            {# the picture for the giveaway #}
            <img src="{{ picture }}" alt="{{ description }} banner" class="img-responsive" width="100" height="100">

            {# a display of the number of giveaway entries, #}
            {# with bonus grammar correct! #}
            <p id="entries">
              {{ numberOfEntries }}
              {% if numberOfEntries == 1 %}
                person 
              {% else %}
                people 
              {% endif %}
              entered this drawing.
            </p>
          
            {# list of entrants #}
            <table id="entrants-table" class="table table-striped table-hover table-users">
              <thead>
                <tr>
                  <th>IGN</th>
                  <th>E-Mail</th>
                  <th>valid</th>
                </tr>
              </thead>
              <tbody>
                {% for entry in entrants %}
                <tr id="entry-{{ loop.index0 }}-row">
                  <td>{{ entry.ign }}</td>
                  <td>{{ entry.email }}</td>
                  <td>true</td>
                </tr>
                {% endfor %}
              </tbody>
            </table>
          
            <button id="save-button" class="btn btn-default pull-right btnx">SAVE</button>
          
          
        </div>
      
        <div class="col-sm-6 admin-operations">
          <p>Ready to start the drawing? Or are there cheater punks in the database that need busting?</p>
          <a href="https://bitpay.com/314412/donate" class="btn btn-default pull-right btnx">INITIATE DRAWING</a>
          <a href="https://bitpay.com/314412/donate" class="btn btn-default pull-right btnx">EDIT DATABASE</a>
        </div>
      
      </div>
    </div>
    <footer>
        <div class="container footer">
          <p>May the universal entropy be in your favor!</p>
          {% include "footer-nav.nunj" %}
        </div>
    </footer>
    <script src="/components/jquery/jquery.min.js"></script>
    <script src="/components/underscore/underscore.js"></script>
    <script src="/components/backbone/backbone.js"></script>
    <script src="/components/backgrid/lib/backgrid.js"></script>
  
    <script type="text/javascript">
//        var liftoffTime = new Date();
//        var x = liftoffTime.setDate(liftoffTime.getDate() + 1);
//        $('#compactLayout').countdown({until: liftoffTime, compact: true,
//            layout: '<b>{dn} Days {hnn}{sep}{mnn}{sep}{snn}</b> {desc}',
//            description: ''});

        $('form#chance').submit(function() {
            console.log($('form#chance').serialize());
            var postdata = $('form#chance').serialize();
            postdata += '&giveawayID={{ giveawayID }}';
            console.log('post data ' + postdata);
            $.ajax({
                type: 'POST',
                url: '/giveaway/entry',
                data: postdata,
                dataType: 'json',
                success: function(json) {
                  $('.error-message').hide();
                  $('.success-message').hide();
                  $('.newsletter form').hide();
                  $('.success-message').html(json.message);
                  $('.success-message').fadeIn();
                },
                error: function(res) {
                  $('.success-message').hide();
                  $('.error-message').hide();
                  $('.error-message').html(res.responseJSON.message);
                  $('.error-message').fadeIn();
                }
            });
            return false;
        });
    </script>
    <script type="text/javascript">
      
    // set up editable table
    $(document).ready(function() {

    var Entry = Backbone.Model.extend({});

    var Entries = Backbone.Collection.extend({
      model: Entry,
      url: "./entries.json"
    });

    var entries = new Entries();

    // Fetch some countries from the url
    entries.fetch();

    // Column definitions
    var columns = [{
      name: "id", // The key of the model attribute
      label: "ID", // The name to display in the header
      editable: false, // By default every cell in a column is editable, but *ID* shouldn't be
      // Defines a cell type, and ID is displayed as an integer without the ',' separating 1000s.
      cell: Backgrid.IntegerCell.extend({
        orderSeparator: ''
      })
    }, {
      name: "ign",
      label: "IGN",
      // The cell type can be a reference of a Backgrid.Cell subclass, any Backgrid.Cell subclass instances like *id* above, or a string
      cell: "string" // This is converted to "StringCell" and a corresponding class in the Backgrid package namespace is looked up
    }, {
      name: "email",
      label: "E-Mail",
      cell: "integer" // An integer cell is a number cell that displays humanized integers
    }, {
      name: "valid",
      label: "Valid",
      cell: "boolean" // A cell type for floating point value, defaults to have a precision 2 decimal numbers
    }];

    // Initialize a new Grid instance
    var grid = new Backgrid.Grid({
      columns: columns,
      collection: entries,
    });

    // Render the grid and attach the Grid's root to your HTML document
    $("#entries-table").append(grid.render().el);
      
      
      
      $('#save-button').click( function() {
        

        console.log('save button clicked');
        console.log(editableGrid.data);
        
        // get an array 1 thru <entries total> of true or false showing valid state
        var deets = _.map(editableGrid.data, function(d, i) {
          return {id: d.id, ign: d.columns[0], email: d.columns[1], valid: d.columns[2]};
        }); // reverse because EditableGrid data is in reverse order
        //deets.reverse();

        console.log(deets);
        console.log(jQuery.param(deets, false));
        console.log(JSON.stringify(deets));
        
      });
      
      
      
      
    });
      
      
    
  </script>
</body>
</html>